getwd()
knitr::opts_chunk$set(echo = TRUE)
irisPlots = (plPlot | pwPlot) / (slPlot | swPlot) +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 14, face = "bold"))
ryanTheme = theme(axis.title = element_text(color = "black", size = 12),
axis.ticks = element_blank(),
axis.text = element_text(color = "black", size = 12),
legend.title = element_text(color = "black", size = 12),
legend.text = element_text(color = "black", size = 12),
legend.key = element_blank(),
legend.background = element_blank(),
panel.border = element_rect(color = "black", size = 1.2),
panel.grid = element_blank(),
plot.background = element_blank()
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("paletteer", "patchwork", "tidyverse", "vegan")
pacman::p_load("paletteer", "patchwork", "tidyverse", "vegan")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
ryanTheme = theme(axis.title = element_text(color = "black", size = 12),
axis.ticks = element_blank(),
axis.text = element_text(color = "black", size = 12),
legend.title = element_text(color = "black", size = 12),
legend.text = element_text(color = "black", size = 12),
legend.key = element_blank(),
legend.background = element_blank(),
panel.border = element_rect(color = "black", size = 1.2),
panel.grid = element_blank(),
plot.background = element_blank()
)
head(iris)
# Plot for Sepal Length
slPlotA = ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Length (cm)") +
theme_bw()
slPlot = slPlotA +
ryanTheme +
theme(legend.position = "none")
slPlot
# Plot for Sepal Width
swPlotA = ggplot(iris, aes(y = Sepal.Width, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Width (cm)") +
theme_bw()
swPlot = swPlotA +
ryanTheme +
theme(legend.position = "none")
swPlot
# Plot for Petal Length
plPlotA = ggplot(iris, aes(y = Petal.Length, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Petal Length (cm)") +
theme_bw()
plPlot = plPlotA +
ryanTheme +
theme(legend.position = "none")
plPlot
# Plot for Petal Width
pwPlotA = ggplot(iris, aes(y = Petal.Width, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Length (cm)") +
theme_bw()
pwPlot = pwPlotA +
ryanTheme +
theme(legend.position = "none")
pwPlot
irisPlots = (plPlot | pwPlot) / (slPlot | swPlot) +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 14, face = "bold"))
irisPlots
knitr::opts_chunk$set(echo = TRUE)
summary(iris)
plot(cars)
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left', fig.dim = c(4,4))
# If we wanted to use real data housed in a folder at the same directory level as our present working directory (i.e. "code/") we could use the following to set the directory to the "data" directory. Two periods(..) means the containing directory. So below we are saying our ne working directory is the "data" folder in the folder which also contains the "code" folder.
# knitr::opts_knit$set(root.dir = '../data')
options(width = 88)
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left', fig.dim = c(4,4))
# If we wanted to use real data housed in a folder at the same directory level as our present working directory (i.e. "code/") we could use the following to set the directory to the "data" directory. Two periods(..) means the containing directory. So below we are saying our ne working directory is the "data" folder in the folder which also contains the "code" folder.
# knitr::opts_knit$set(root.dir = '../data')
options(width = 88)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("paletteer", "patchwork", "tidyverse", "vegan")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
ryanTheme = theme(axis.title = element_text(color = "black", size = 12),
axis.ticks = element_blank(),
axis.text = element_text(color = "black", size = 12),
legend.title = element_text(color = "black", size = 12),
legend.text = element_text(color = "black", size = 12),
legend.key = element_blank(),
legend.background = element_blank(),
panel.border = element_rect(color = "black", size = 1.2),
panel.grid = element_blank(),
plot.background = element_blank()
)
head(iris)
# Plot for Sepal Length
slPlotA = ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Length (cm)") +
theme_bw()
slPlot = slPlotA +
ryanTheme +
theme(legend.position = "none")
slPlot
# Plot for Sepal Width
swPlotA = ggplot(iris, aes(y = Sepal.Width, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Width (cm)") +
theme_bw()
swPlot = swPlotA +
ryanTheme +
theme(legend.position = "none")
swPlot
# Plot for Petal Length
plPlotA = ggplot(iris, aes(y = Petal.Length, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Petal Length (cm)") +
theme_bw()
plPlot = plPlotA +
ryanTheme +
theme(legend.position = "none")
plPlot
# Plot for Petal Width
pwPlotA = ggplot(iris, aes(y = Petal.Width, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Length (cm)") +
theme_bw()
pwPlot = pwPlotA +
ryanTheme +
theme(legend.position = "none")
pwPlot
irisPlots = (plPlot | pwPlot) / (slPlot | swPlot) +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 14, face = "bold"))
irisPlots
knitr::opts_chunk$set(echo = TRUE)
summary(iris)
plot(cars)
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left', fig.dim = c(4,4))
# If we wanted to use real data housed in a folder at the same directory level as our present working directory (i.e. "code/") we could use the following to set the directory to the "data" directory. Two periods(..) means the containing directory. So below we are saying our ne working directory is the "data" folder in the folder which also contains the "code" folder.
# knitr::opts_knit$set(root.dir = '../data')
options(width = 88)
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left', fig.dim = c(4,4))
# If we wanted to use real data housed in a folder at the same directory level as our present working directory (i.e. "code/") we could use the following to set the directory to the "data" directory. Two periods(..) means the containing directory. So below we are saying our ne working directory is the "data" folder in the folder which also contains the "code" folder.
# knitr::opts_knit$set(root.dir = '../data')
options(width = 88)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("paletteer", "patchwork", "tidyverse", "vegan")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
ryanTheme = theme(axis.title = element_text(color = "black", size = 12),
axis.ticks = element_blank(),
axis.text = element_text(color = "black", size = 12),
legend.title = element_text(color = "black", size = 12),
legend.text = element_text(color = "black", size = 12),
legend.key = element_blank(),
legend.background = element_blank(),
panel.border = element_rect(color = "black", size = 1.2),
panel.grid = element_blank(),
plot.background = element_blank()
)
head(iris)
# Plot for Sepal Length
slPlotA = ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Length (cm)") +
theme_bw()
slPlot = slPlotA +
ryanTheme +
theme(legend.position = "none")
slPlot
# Plot for Sepal Width
swPlotA = ggplot(iris, aes(y = Sepal.Width, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Width (cm)") +
theme_bw()
swPlot = swPlotA +
ryanTheme +
theme(legend.position = "none")
swPlot
# Plot for Petal Length
plPlotA = ggplot(iris, aes(y = Petal.Length, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Petal Length (cm)") +
theme_bw()
plPlot = plPlotA +
ryanTheme +
theme(legend.position = "none")
plPlot
# Plot for Petal Width
pwPlotA = ggplot(iris, aes(y = Petal.Width, x = Species, fill = Species)) +
geom_violin(alpha = 0.5) +
geom_point(shape = 21, color = "black",
size = 1.5, position = position_jitterdodge(1)) +
scale_fill_manual(values = paletteer_d("wesanderson::GrandBudapest1")) +
xlab("Species") +
ylab("Sepal Length (cm)") +
theme_bw()
pwPlot = pwPlotA +
ryanTheme +
theme(legend.position = "none")
pwPlot
irisPlots = (plPlot | pwPlot) / (slPlot | swPlot) +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 14, face = "bold"))
irisPlots
